generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid(7))
  firstName String
  fullName String
  email String @unique
  role Role @default(USER)
  password String @default("HAVE TO CHANGE PASSWORD")

  createdAt DateTime @default(now())
  createdBy String?

  createdByRelation User? @relation("WhoCreatedUser", fields: [createdBy], references: [id])
  createdUsers User[] @relation("WhoCreatedUser")
  posts Post[]
  userSenderId FriendRelation[] @relation("WhoSentInvite")
  userReceiver FriendRelation[] @relation("WhoReceivedInvite")
}

model FriendRelation {
  id Int @id @default(autoincrement())
  userSenderId String
  userReceiverId String
  status FriendStatus @default(PENDING)

  createdAt DateTime @default(now())

  userSenderRelation User @relation("WhoSentInvite", fields: [userSenderId], references: [id])
  userReceiverRelation User @relation("WhoReceivedInvite", fields: [userReceiverId], references: [id])
}

model Post {
  id String @id @default(uuid(7))
  // text and multimedia are immutable. they must follow OR logic
  text String?
  multimedia String?
  privacy PostPrivacy @default(PUBLIC)

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  authorId String
  author User @relation(fields: [authorId], references: [id])
}

enum FriendStatus {
  PENDING
  ACCEPTED
}

enum PostPrivacy {
  PUBLIC
  RESTRICTED
  PRIVATE
}

enum Role {
  USER
  MODERATOR
  ADMIN
}